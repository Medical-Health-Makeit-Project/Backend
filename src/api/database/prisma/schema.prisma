// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  name         String
  lastname     String
  username     String        @unique
  avatar       String?
  email        String        @unique
  phone        String        @unique
  nationality  String
  gender       String
  birthdate    DateTime
  blood_type   String
  password     String
  role_id      Role          @relation(fields: [roleId], references: [id])
  roleId       String
  appointments Appointment[]
  orders       Order[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Patient {
  id             String        @id @default(cuid())
  firstname      String
  lastname       String
  isAdult        Boolean
  gender         String
  phone          String
  email          String        @unique
  identification String
  appointments   Appointment[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Appointment {
  id            String      @id @default(cuid())
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  patient       Patient?    @relation(fields: [patientId], references: [id])
  patientId     String?
  doctor        Doctor      @relation(fields: [doctorId], references: [id])
  doctorId      String
  area          Area        @relation(fields: [areaId], references: [id])
  areaId        String
  date          DateTime
  scheduleAt    String
  order         Order?      @relation(fields: [orderId], references: [id])
  orderId       String?
  reason        String
  headquarter   Headquarter @relation(fields: [headquarterId], references: [id, city])
  headquarterId String
  createdAt     DateTime    @default(now())
}

model Doctor {
  id             String        @id @default(cuid())
  prefix         String
  firstname      String
  lastname       String
  avatar         String
  email          String        @unique
  phone          String        @unique
  gender         String
  birthdate      DateTime
  introduction   String?
  qualifications String[]
  memberships    String[]
  skills         String[]
  appointments   Appointment[]
  password       String
  role_id        Role          @relation(fields: [roleId], references: [id])
  roleId         String
  headquarter    Headquarter   @relation(fields: [headquarterId], references: [id])
  headquarterId  String
  area           Area          @relation(fields: [areaId], references: [id])
  areaId         String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Role {
  id     String   @id @default(cuid())
  role   Int
  doctor Doctor[]
  User   User[]
  Admin  Admin[]
}

model Product {
  id          String   @id @default(cuid())
  product     String   @unique
  label       String
  price       Int
  stock       Int
  dose        String
  image       String   @unique
  discount    Int
  description String
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  order       Order?   @relation(fields: [orderId], references: [id])
  orderId     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  product   Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Area {
  id           String        @id @default(cuid())
  area         String        @unique
  price        Int
  doctors      Doctor[]
  appointments Appointment[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Location {
  id           String        @id @default(cuid())
  country      String
  headquarters Headquarter[]
  createdAt    DateTime      @default(now())
}

model Headquarter {
  id           String        @id @default(cuid())
  city         String
  address      String
  location     Location      @relation(fields: [locationId], references: [id])
  locationId   String
  appointments Appointment[]
  doctors      Doctor[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Order {
  id           String        @id @default(cuid())
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  products     Product[]
  appointments Appointment[]
  brand        String
  country      String
  exp_month    Int
  exp_year     Int
  last4        String
  state        String
  total        Int
  createdAt    DateTime      @default(now())
}

model Admin {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role_id   Role     @relation(fields: [roleId], references: [id])
  roleId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
